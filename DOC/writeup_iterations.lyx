#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass revtex4-1
\begin_preamble
\usepackage{tikz}
\end_preamble
\options notitlepage
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "tgpagella" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\tht}{\vartheta}
\end_inset


\begin_inset FormulaMacro
\newcommand{\ph}{\varphi}
\end_inset


\begin_inset FormulaMacro
\newcommand{\balpha}{\boldsymbol{\alpha}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\btheta}{\boldsymbol{\theta}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\bJ}{\boldsymbol{J}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\bGamma}{\boldsymbol{\Gamma}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\bOmega}{\boldsymbol{\Omega}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\d}{\text{d}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\t}[1]{\text{#1}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\m}{\text{m}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\v}[1]{\boldsymbol{#1}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\u}[1]{\underline{#1}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\renewcommand{\t}[1]{\mathbf{#1}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\bA}{\boldsymbol{A}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\bB}{\boldsymbol{B}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\c}{\mathrm{c}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\difp}[2]{\frac{\partial#1}{\partial#2}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\xset}{{\bf x}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\zset}{{\bf z}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\qset}{{\bf q}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\pset}{{\bf p}}
\end_inset


\end_layout

\begin_layout Title
Preconditioned iterations via the Arnoldi method aka incomplete GMRES
\end_layout

\begin_layout Author
Christopher Albert, Sergei Kasilov
\end_layout

\begin_layout Date
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Section
Preconditioned iterative schemes
\end_layout

\begin_layout Standard
See also http://www.math.vt.edu/people/sturler/LectureNotes/IterMethods_02.pdf
 and Albert, JPCS Varenna 2016 
\begin_inset Quotes eld
\end_inset

Kinetic Modeling
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Subsection
Basics
\end_layout

\begin_layout Standard
Consider a linear system
\begin_inset Formula 
\begin{equation}
\hat{A}\v x=\v b,\label{eq:Axb}
\end{equation}

\end_inset

where 
\begin_inset Formula $\v x$
\end_inset

 and 
\begin_inset Formula $\v b$
\end_inset

 are vectors of length 
\begin_inset Formula $N$
\end_inset

 and 
\begin_inset Formula $\hat{A}$
\end_inset

 is an invertible linear operator, i.e.
\begin_inset Formula 
\begin{equation}
\hat{A}(\lambda\v x+\mu\v y)=\lambda\hat{A}\v x+\mu\hat{A}\v y.
\end{equation}

\end_inset

We assume that the matrix representation of as an 
\begin_inset Formula $N\times N$
\end_inset

 is not given (usually due to the construction of the algorithm and/or memory
 requirements for large 
\begin_inset Formula $N$
\end_inset

), but for a given vector 
\begin_inset Formula $\v x$
\end_inset

 there should be an explicit way to obtain 
\begin_inset Formula $\hat{A}\v x$
\end_inset

, e.g.
 by a function call.
 We are thus limited to matrix-free iterative methods to solve Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Axb"

\end_inset

.
 Such methods include direct (Richardson) iterations, possibly with some
 preconditioner, the conjugate gradient method, and the GMRES method.
\end_layout

\begin_layout Standard
In particular we are going to consider problems of treating problems with
 some 
\begin_inset Quotes eld
\end_inset

first guess
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $\v x_{0}$
\end_inset

 and a correction 
\begin_inset Formula $\hat{K}\v x$
\end_inset

 depending self-consistently on the final solution, so
\begin_inset Formula 
\begin{equation}
\v x=\v x_{0}+\hat{K}\v x.\label{eq:xit}
\end{equation}

\end_inset

This means our operator 
\begin_inset Formula $\hat{A}$
\end_inset

 is of the form
\begin_inset Formula 
\begin{equation}
\hat{A}=(\hat{I}-\hat{K}),
\end{equation}

\end_inset

where 
\begin_inset Formula $\hat{I}$
\end_inset

 is the identity operator, and our equation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:xit"

\end_inset

 in the form of 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Axb"

\end_inset

 with 
\begin_inset Formula $\v b=\v x_{0}$
\end_inset

 becomes
\begin_inset Formula 
\begin{equation}
(\hat{I}-\hat{K})\v x=\v x_{0},\label{eq:ImK}
\end{equation}

\end_inset

so the solution is formally
\begin_inset Formula 
\begin{equation}
\v x=(\hat{I}-\hat{K})^{-1}\v x_{0}.\label{eq:sol}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Exact solution in the eigenbasis
\begin_inset CommandInset label
LatexCommand label
name "subsec:Exact-solution-in"

\end_inset


\end_layout

\begin_layout Standard
Assume we have have solved the eigenvalue problem for a full-rank operator
 
\begin_inset Formula $\hat{K}$
\end_inset

 and can write
\begin_inset Formula 
\begin{equation}
\hat{K}=\hat{V}\hat{\Lambda}\hat{V}^{-1},
\end{equation}

\end_inset

where
\begin_inset Formula 
\begin{equation}
\hat{\Lambda}=\left(\begin{array}{cccc}
\lambda_{1}\\
 & \lambda_{2}\\
 &  & \ddots\\
 &  &  & \lambda_{N}
\end{array}\right)=\v{\Lambda}\hat{I}
\end{equation}

\end_inset

is a diagonal matrix containing eigenvalues, 
\begin_inset Formula 
\begin{equation}
\hat{V}=(\v v_{1},\v v_{2},\dots\v v_{N})
\end{equation}

\end_inset

is a matrix with respective eigenvectors as columns, and 
\begin_inset Formula $\hat{V}^{-1}$
\end_inset

 is its inverse.
 For
\emph on
 normal 
\emph default
matrices the eigenvectors form an orthogonal basis and 
\begin_inset Formula $\hat{V}^{-1}$
\end_inset

 is equal to the transposed complex conjugate 
\begin_inset Formula $\hat{V}^{\ast}$
\end_inset

 of 
\begin_inset Formula $\hat{V}$
\end_inset

.
 Multiplying Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ImK"

\end_inset

 from the left with 
\begin_inset Formula $\hat{V}^{-1}$
\end_inset

 and defining components 
\begin_inset Formula $\v x^{\prime}$
\end_inset

 in the eigenbasis via
\begin_inset Formula 
\begin{equation}
\v x=\sum_{k}x_{k}^{\prime}\v v_{k}=(\v v_{1},\v v_{2},\dots\v v_{N})\v x^{\prime}=\hat{V}\v x^{\prime},
\end{equation}

\end_inset

yields an equation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
(\underbrace{\hat{V}^{-1}\hat{I}\hat{V}}_{\hat{I}}-\hat{\Lambda})\v x^{\prime}=\v x_{0}^{\prime},\label{eq:ImK-1}
\end{equation}

\end_inset

where components of 
\begin_inset Formula $\v x^{\prime}$
\end_inset

 and 
\begin_inset Formula $\v x_{0}^{\prime}$
\end_inset

 in the eigenbasis 
\begin_inset Formula $(\v v_{1},\v v_{2},\dots\v v_{N})$
\end_inset

 are related to 
\begin_inset Formula $\v x$
\end_inset

 and 
\begin_inset Formula $\v x_{0}$
\end_inset

 in the original canonical basis by the inverse basis transformation
\begin_inset Formula 
\begin{equation}
\v x^{\prime}=\hat{V}^{-1}\v x.
\end{equation}

\end_inset

For normal matrices with 
\begin_inset Formula $\hat{V}^{-1}=\hat{V}^{\ast}$
\end_inset

 this reduces to a projection to eigenvectors
\begin_inset Formula 
\begin{equation}
\v x^{\prime}=\hat{V}^{\ast}\v x\Rightarrow x_{k}^{\prime}=\v v_{k}^{\star}\cdot\v x.
\end{equation}

\end_inset

In any case we can directly write the solution of Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ImK-1"

\end_inset

 in the eigenbasis,
\begin_inset Formula 
\begin{equation}
\v x^{\prime}=(\hat{I}-\hat{\Lambda})^{-1}\v x_{0}^{\prime}=\left(\begin{array}{cccc}
\frac{1}{1-\lambda_{1}}\\
 & \frac{1}{1-\lambda_{2}}\\
 &  & \ddots\\
 &  &  & \frac{1}{1-\lambda_{N}}
\end{array}\right)\left(\begin{array}{c}
x_{01}^{\prime}\\
x_{02}^{\prime}\\
\dots\\
x_{0N}^{\prime}
\end{array}\right).
\end{equation}

\end_inset

Finally we transform back to 
\begin_inset Formula 
\begin{equation}
\v x=\hat{V}\v x^{\prime}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Performing this procedure in an incomplete iterative way until convergence,
 starting at the largest eigenvalue using a Krylov/Arnoldi scheme is known
 as the GMRES method.
 Since in the end our matrices will be noisy and our problems possibly nonlinear
, we cannot apply standard method up to convergence, let alone find all
 eigenvalues.
 Instead we will work partly in the eigenbasis to precondition the problem
 and solve the remaining (hopefully highly convergent) part of the problem
 by direct iterations discussed below.
\end_layout

\begin_layout Subsection
Direct iterations
\end_layout

\begin_layout Standard
A simple and robust (but often slow) way to solve Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ImK"

\end_inset

 iteratively is the following.
 If we apply the operator 
\begin_inset Formula $\hat{K}$
\end_inset

 to 
\begin_inset Formula $\v x$
\end_inset

 and it doesn't change anymore, this means that we have found a converged
 solution.
 Indeed we can expand Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ImK"

\end_inset

 to an operator series analogous to the well-known geometric series
\begin_inset Formula 
\begin{equation}
\frac{1}{1-z}=1+z+z^{2}+\dots\label{eq:series1}
\end{equation}

\end_inset

as a so-called 
\emph on
Neumann
\emph default
 or 
\emph on
operator series
\emph default

\begin_inset Formula 
\begin{equation}
(\hat{I}-\hat{K})^{-1}=\hat{I}+\hat{K}+\hat{K}^{2}+\dots,
\end{equation}

\end_inset

where 
\begin_inset Formula $\hat{K}^{n}\equiv\hat{K}\hat{K}\dots$
\end_inset

 means applying the operator 
\begin_inset Formula $n$
\end_inset

 times.
 The solution
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:sol"

\end_inset

 to Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ImK"

\end_inset

 is thus given as an infinite series
\begin_inset Formula 
\begin{equation}
\v x=(\hat{I}-\hat{K})^{-1}=\v x_{0}+\hat{K}\v x_{0}+\hat{K}^{2}\v x_{0}+\dots\label{eq:series2}
\end{equation}

\end_inset

Of course we can do this kind of expansion for any linear system Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Axb"

\end_inset

 with operator 
\begin_inset Formula $\hat{A}$
\end_inset

 in by defining 
\begin_inset Formula $\hat{K}\equiv\hat{A}+\hat{I}$
\end_inset

, but in contrast to the natural expansion for problems of the form 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ImK"

\end_inset

, adding and substracting 
\begin_inset Formula $\hat{I}$
\end_inset

 in Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Axb"

\end_inset

 seems like a rather arbitrary step.
\end_layout

\begin_layout Subsubsection
Convergence and analogy to the complex geometric series
\end_layout

\begin_layout Standard
Now the natural question is, if the series 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:series2"

\end_inset

 converges, and if yes, how fast.
 Let us take again the geometric series
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:series1"

\end_inset

 as an example.
 The function 
\begin_inset Formula $1/(1-z)$
\end_inset

 is the inverse of 
\begin_inset Formula $1-z$
\end_inset

 in the sense that
\begin_inset Formula 
\begin{align*}
(1-z)\,\v x & =\v x_{0}\Leftrightarrow\v x=\frac{1}{1-z}\v x_{0}
\end{align*}

\end_inset

and has a well-defined value for any complex number 
\begin_inset Formula $z\neq1$
\end_inset

 (the corresponding operator would be 
\begin_inset Formula $\hat{K}=z\hat{I}$
\end_inset

).
 We can easily check convergence of the series by taking the formula for
 finite polynomials
\begin_inset Formula 
\begin{equation}
1+z+z^{2}+\dots+z^{n}=\frac{1-z^{n+1}}{1-z}.\label{eq:series1-2}
\end{equation}

\end_inset

Taking a limit 
\begin_inset Formula $n\rightarrow\infty$
\end_inset

 shows lets 
\begin_inset Formula $z^{n}$
\end_inset

 vanish if 
\begin_inset Formula $|z|<1$
\end_inset

.
 If we put in a number with 
\begin_inset Formula $|z|>1$
\end_inset

 the series diverges and cannot reproduce the correct result 
\begin_inset Formula $1/(1-z)$
\end_inset

.
 The series representation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:series1"

\end_inset

 is thus said to have a convergence radius 
\begin_inset Formula $r=1$
\end_inset

.
 In the limiting case 
\begin_inset Formula $|z|=1$
\end_inset

 we don't get any useful information, but note the following:
\end_layout

\begin_layout Enumerate
At a real 
\begin_inset Formula $z=1$
\end_inset

 the series diverges, but so does 
\begin_inset Formula $\frac{1}{1-z}$
\end_inset

.
\end_layout

\begin_layout Enumerate
At purely imaginary 
\begin_inset Formula $z=i$
\end_inset

 the series oscillates around zero
\begin_inset Formula 
\begin{equation}
1+i-1-i+\dots\label{eq:series1-1}
\end{equation}

\end_inset

but doesn't converge.
\end_layout

\begin_layout Standard
Now we can ask the question how fast the series converges, i.e.
 how many terms we need to compute in order to get a reasonable approximation.
 Take for example 
\begin_inset Formula $z=0.2$
\end_inset

.
 Then we have the exact result
\begin_inset Formula 
\begin{equation}
f(z)=\frac{1}{1-z}=\frac{1}{1-0.2}=\frac{1}{0.8}=1.25\,.
\end{equation}

\end_inset

The first few truncated series terms are
\begin_inset Formula 
\begin{align}
f_{[0]} & =1,\\
f_{[1]} & =1+0.2=1.2,\\
f_{[2]} & =1+0.2+0.04=1.24,\\
f_{[3]} & =1+0.2+0.04+0.008=1.248,\\
 & \vdots\nonumber 
\end{align}

\end_inset

We observe that we reach a very good approximation of 
\begin_inset Formula $1.25$
\end_inset

 quite fast.
 Take on the other hand 
\begin_inset Formula $z=0.8$
\end_inset

 with
\begin_inset Formula 
\begin{equation}
f(z)=\frac{1}{1-z}=\frac{1}{1-0.8}=\frac{1}{0.2}=5\,.
\end{equation}

\end_inset

Then we have
\begin_inset Formula 
\begin{align}
f_{[0]} & =1,\label{eq:08}\\
f_{[1]} & =1+0.8=1.8,\\
f_{[2]} & =1+0.8+0.64=2.44,\\
f_{[3]} & =1+0.8+0.64+0.008=2.952,\label{eq:08end}\\
 & \vdots\nonumber 
\end{align}

\end_inset

Here convergence is much worse and we would need a lot more iterations to
 reach values close to 
\begin_inset Formula $5$
\end_inset

.
 The reason is that 
\begin_inset Formula $z=0.8$
\end_inset

 is much closer to 
\begin_inset Formula $1$
\end_inset

 than 
\begin_inset Formula $z=0.2$
\end_inset

, and thus produces a large value when taking 
\begin_inset Formula $1/(1-z)$
\end_inset

.
 Our available series terms are always 
\begin_inset Formula $<1$
\end_inset

 and must shrink even further to converge.
 The exact value of 
\begin_inset Formula $1/(1-z)$
\end_inset

 can become arbitrarily large for 
\begin_inset Formula $z\rightarrow1$
\end_inset

 and arbitrarily close to 
\begin_inset Formula $1$
\end_inset

 for 
\begin_inset Formula $z\rightarrow0$
\end_inset

.
 In fact in the former case we have infinitely slow convergence due to the
 mentioned reason, whereas in the latter case we have the exact solution
 already in the 
\begin_inset Formula $0$
\end_inset

th iteration.
\end_layout

\begin_layout Subsection
Enforcing convergence of a series by a transformation
\end_layout

\begin_layout Standard
Now the question is how we can extend our radius of convergence beyond 
\begin_inset Formula $1$
\end_inset

 and at the same time accelerate convergence for 
\begin_inset Formula $z<1$
\end_inset

 close to 
\begin_inset Formula $1$
\end_inset

.
 Let's see what happens if we rescale
\begin_inset Formula 
\begin{equation}
z\equiv aw,
\end{equation}

\end_inset

with a fixed 
\begin_inset Formula $a$
\end_inset

.
 Then we have partial sums
\begin_inset Formula 
\begin{equation}
1+aw+a^{2}w^{2}+\dots+a^{n}w^{n}=\frac{1-a^{n+1}w^{n+1}}{1-aw}.
\end{equation}

\end_inset

Unfortunately this doesn't help us at all, since the convergence radius
 of the series in 
\begin_inset Formula $w$
\end_inset

 is now only 
\begin_inset Formula $1/a$
\end_inset

, which gives us the exact same behavior as of the original series.
 This will turn out to be the reason why a relaxation factor for direct
 iterations doesn't help us in this class or problems.
\end_layout

\begin_layout Standard
What works better for accelerating convergence is replacing 
\begin_inset Formula 
\begin{equation}
z=aw+d
\end{equation}

\end_inset

 by a linear transformation with generally complex 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $d$
\end_inset

, i.e.
\begin_inset Formula 
\begin{equation}
\frac{1}{1-z}=\frac{1}{1-aw-d}=\frac{1}{1-d}\frac{1}{1-\frac{aw}{1-d}}=\frac{1}{1-d}\frac{1}{1-\frac{z-d}{1-d}}.
\end{equation}

\end_inset

The inverse transformation is
\begin_inset Formula 
\begin{equation}
w=\frac{z}{a}-\frac{d}{a}.\label{eq:zw}
\end{equation}

\end_inset

More generally, to accelerate convergence of complex number series one would
 use conformal mappings (see e.g.
 
\begin_inset CommandInset href
LatexCommand href
target "http://www.math.wisc.edu/~waleffe/M321/complex.pdf"

\end_inset

), but for our purpose of treating operators, we limit ourselves to linear
 transformations.
 In that case we obtain a geometric series representation in 
\begin_inset Formula $\frac{aw}{1-d}$
\end_inset

 as
\begin_inset Formula 
\begin{align}
\frac{1}{1-z} & =\frac{1}{1-d}\left(1+\frac{aw}{1-d}+\left(\frac{aw}{1-d}\right)^{2}+\dots\right)\\
 & =\frac{1}{1-d}\left(1+\frac{z-d}{1-d}+\left(\frac{z-d}{1-d}\right)^{2}+\dots\right)
\end{align}

\end_inset

that converges for 
\begin_inset Formula $\left|\frac{aw}{1-d}\right|<1$
\end_inset

, i.e.
\begin_inset Formula 
\begin{equation}
|z-d|<|1-d|.\label{eq:conve}
\end{equation}

\end_inset

Remember that 
\begin_inset Formula $d$
\end_inset

 is complex, so we can really shift the complex origin around (try drawing
 it), rather than just subtracting real numbers from 
\begin_inset Formula $z$
\end_inset

.
 Let's take 
\begin_inset Formula $d=0.6$
\end_inset

 and 
\begin_inset Formula $a=1$
\end_inset

.
 Then for our case 
\begin_inset Formula $z=0.8$
\end_inset

 we obtain 
\begin_inset Formula 
\begin{equation}
w=\frac{z-d}{a}=0.2
\end{equation}

\end_inset

 and approximations
\begin_inset Formula 
\begin{align}
f_{[0]} & =\frac{1}{1-d}=\frac{1}{0.4}=2.5,\\
f_{[1]} & =\frac{1}{0.4}\left(1+\frac{0.8}{0.4}\right)=3.75,\\
f_{[2]} & =\frac{1}{0.4}\left(1+\frac{0.2}{0.4}+\left(\frac{0.2}{0.4}\right)^{2}\right)=4.375,\\
f_{[3]} & =\frac{1}{0.4}\left(1+\frac{0.2}{0.4}+\left(\frac{0.2}{0.4}\right)^{2}+\left(\frac{0.2}{0.4}\right)^{3}\right)=4.6875,\\
 & \vdots\nonumber 
\end{align}

\end_inset

This is not quite as good as the case of 
\begin_inset Formula $z=0.2$
\end_inset

, but already much better than the direct iterations in
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:08"

\end_inset

-
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:08end"

\end_inset

).
 Of course if we had taken 
\begin_inset Formula $d=z$
\end_inset

 then 
\begin_inset Formula $f_{[0]}=f$
\end_inset

 would have been the exact solution with guaranteed convergence everywhere
 (except trivial 
\begin_inset Formula $z=0$
\end_inset

) due to 
\begin_inset Formula $0<|1-z|$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:conve"

\end_inset

.
\end_layout

\begin_layout Subsection
Extension to operator series
\end_layout

\begin_layout Standard
For the the operator series of 
\begin_inset Formula $(\hat{I}-\hat{K})^{-1}$
\end_inset

 things work in a similar way as for the scalar case 
\begin_inset Formula $1/(1-z)\equiv(\hat{I}-z\hat{I})^{-1}$
\end_inset

 and can be understood in terms of 
\emph on
eigenvalues
\emph default
.
 Say we knew 
\begin_inset Formula $\v x_{0}$
\end_inset

 in the eigenbasis,
\begin_inset Formula 
\begin{equation}
\v x_{0}=\sum_{k=1}^{N}x_{0k}^{\prime}\v v_{k}=\hat{V}\v x_{0}^{\prime}.\label{eq:eigdecomp}
\end{equation}

\end_inset

Then
\begin_inset Formula 
\begin{equation}
\hat{K}\v x_{0}=\hat{V}\hat{\Lambda}\hat{V}^{-1}\v x_{0}=\hat{V}\hat{\Lambda}\v x_{0}^{\prime}=\sum_{k=1}^{N}\lambda_{k}x_{0k}^{\prime}\v v_{k}.
\end{equation}

\end_inset

Applying 
\begin_inset Formula $\hat{K}$
\end_inset

 for 
\begin_inset Formula $n$
\end_inset

 times yields
\begin_inset Formula 
\begin{equation}
\hat{K}^{n}\v x_{0}=(\hat{V}\hat{\Lambda}\hat{V}^{-1})(\hat{V}\hat{\Lambda}\hat{V}^{-1})\dots(\hat{V}\hat{\Lambda}\hat{V}^{-1})\v x_{0}=\hat{V}\hat{\Lambda}^{n}\v x_{0}^{\prime}=\sum_{k=1}^{N}\lambda_{k}^{\,n}x_{0k}^{\prime}\v v_{k}.
\end{equation}

\end_inset

Thus 
\emph on
all
\emph default
 eigenvalues 
\begin_inset Formula $\lambda_{k}^{\,n}$
\end_inset

 where 
\begin_inset Formula $x_{0k}^{\prime}\neq0$
\end_inset

 i.e.
 for normal matrices with some components 
\begin_inset Formula $\v v_{k}^{\star}\cdot\v x_{0}$
\end_inset

 of 
\begin_inset Formula $\v v_{k}$
\end_inset

 in the excitation 
\begin_inset Formula $\v x_{0}$
\end_inset

, have to fulfil 
\begin_inset Formula $\lambda_{k}^{\,n}<1$
\end_inset

 for convergence of
\begin_inset Formula 
\begin{equation}
\hat{I}+\hat{K}+\hat{K}^{2}+\dots
\end{equation}

\end_inset

with direct iterations.
 We summarize this feature of values for 
\begin_inset Formula $z$
\end_inset

 inside the geometric series for 
\begin_inset Formula $1/(1-z)$
\end_inset

 as well as the spectrum of eigenvalues 
\begin_inset Formula $\lambda_{k}$
\end_inset

 of 
\begin_inset Formula $\hat{K}$
\end_inset

 for the operator series in a drawing:
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
scalebox{0.66}{
\end_layout

\end_inset


\begin_inset CommandInset include
LatexCommand input
filename "eigs.tpx"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We must get rid of the 
\emph on
ugly
\emph default
 points outside the unit circle that cause divergence, and would also like
 to remove 
\emph on
bad
\emph default
 points close to the inside of the unit circle that cause slow convergence.
 With only 
\emph on
good
\emph default
 points left direct iterations will be very fast.
\end_layout

\begin_layout Standard
In general we call a method to make an 
\emph on
operator series 
\emph default
converge by a linear transformation 
\emph on
preconditioned iterations.

\emph default
 More generally what we have done in the previous section for the seemingly
 trivial optimum case 
\begin_inset Formula $d=z$
\end_inset

 is related to the eigenvalues of the operator where 
\begin_inset Formula $\hat{K}\v v=\lambda\v v$
\end_inset

 for 
\emph on
eigenvectors 
\begin_inset Formula $\v v$
\end_inset


\emph default
.
 Since for 
\begin_inset Formula $\hat{K}=z\hat{I}$
\end_inset

 all vectors are eigenvectors with 
\begin_inset Formula $\lambda=z$
\end_inset

 the solution becomes trivial in this sense.
 Now we will extend the discussed concepts and preconditioning to general
 linear operators and their eigenbasis.
 From section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Exact-solution-in"

\end_inset

 we already know how to construct an exact solution via the eigenvalue problem.
 Now we will only solve a part of the problem in the eigenspace of the largest
 eigenvalues for preconditioning.
 Once we have reached 
\begin_inset Formula $\lambda_{k}<1$
\end_inset

 (or better 
\begin_inset Formula $\ll1$
\end_inset

) we use direct iterations for the rest that should rapidly converge if
 
\begin_inset Formula $\lambda_{k}\ll1$
\end_inset

.
 In fact, for strictly analyzing convergence, one could use the operator
 norm, also related to eigenvalues, but here we are satisfied with the more
 qualitative explanation and analogy to the complex geometric series.
 Krylov/Arnoldi methods are ideally suited for this task, since they iteratively
 find the largest eigenvalues (Python and Matlab know this as 
\begin_inset Quotes eld
\end_inset

eigs
\begin_inset Quotes erd
\end_inset

 in contrast to the 
\begin_inset Quotes eld
\end_inset

eig
\begin_inset Quotes erd
\end_inset

 function).
 In the special case of Hermitian matrices (they are normal) the Arnoldi
 method is known as the Lanczos method.
\end_layout

\begin_layout Standard
Let's assume we know the largest 
\begin_inset Formula $m$
\end_inset

 eigenvalues 
\begin_inset Formula $\lambda_{k}$
\end_inset

 of 
\begin_inset Formula $\hat{K}$
\end_inset

 with eigenvectors 
\begin_inset Formula $\v v_{k}$
\end_inset

, 
\begin_inset Formula $k=1\dots m$
\end_inset

.
 Then we introduce the incomplete eigenvector 
\begin_inset Formula $N\times m$
\end_inset

 matrix
\begin_inset Formula 
\begin{equation}
\hat{V}_{m}=(\v v_{1},\v v_{2},\dots,\v v_{m}).
\end{equation}

\end_inset

Now for a 
\emph on
normal 
\emph default
operator 
\begin_inset Formula $\hat{K}$
\end_inset

 it would be easy to just project down to the subspace spanned by 
\begin_inset Formula $\v v_{1\dots m}$
\end_inset

 via an inner product 
\begin_inset Formula $\v v_{k}^{\star}\cdot\v x$
\end_inset

.
 However, for a general (not necessarily normal) operator 
\begin_inset Formula $\hat{K}$
\end_inset

 the eigenvectors are not orthogonal, i.e.
 
\begin_inset Formula $\v v_{i}^{\star}\cdot\v v_{j}\neq|\v v_{j}|^{2}\delta_{ij}$
\end_inset

.
 This case is similar to the extension of tensor calculus to a general non-ortho
gonal basis in co- and contravariant formalism.
 The case is handled by the metric tensor components in geometry, that has
 components
\begin_inset Formula 
\begin{equation}
g_{ij}=\v e_{i}\cdot\v e_{j}
\end{equation}

\end_inset

and becomes 
\begin_inset Formula $\delta_{ij}$
\end_inset

 in an orthonormal system.
 We can convert between co- and contravariant components by 
\begin_inset Formula $g_{ij}$
\end_inset

 and its inverse matrix 
\begin_inset Formula $g^{ij}$
\end_inset

 for the reciprocal metric.
 Components of vectors can be found by projecting to the dual basis, i.e.
\begin_inset Formula 
\begin{align}
\v a & =\sum_{k}a^{k}e_{k}=\sum_{k}(\v e^{k}\cdot\v a)\v e_{k}\nonumber \\
 & =\sum_{i,k}a_{i}g^{ik}\v e_{k}=\sum_{i,k}(\v e_{i}\cdot\v a)g^{ik}\v e_{k}.
\end{align}

\end_inset

We see that in order to work fully in the usual basis 
\begin_inset Formula $\v e_{k}$
\end_inset

 and avoid the dual basis 
\begin_inset Formula $\v e^{k}$
\end_inset

 we require the reciprocal metric 
\begin_inset Formula $g^{ik}$
\end_inset

.
 Also the 
\begin_inset Quotes eld
\end_inset

bra-ket
\begin_inset Quotes erd
\end_inset

 notation of quantum mechanics works the same way.
 Analogously in our complex linear operator space to be able to project
 to the partial eigenbasis in 
\begin_inset Formula $\hat{V}_{m}$
\end_inset

 we define a matrix 
\begin_inset Formula $\hat{G}_{mm}$
\end_inset

 with entries
\begin_inset Formula 
\begin{equation}
G_{ij}=\v v_{i}^{\star}\cdot\v v_{j}.
\end{equation}

\end_inset

Remember that
\begin_inset Formula 
\begin{equation}
\v x^{\prime}=\hat{V}^{-1}\v x\label{eq:vinv}
\end{equation}

\end_inset

in a full eigenspace of dimension 
\begin_inset Formula $N$
\end_inset

.
 Now we cannot get 
\begin_inset Formula $\hat{V}^{-1}$
\end_inset

 of the full eigenspace here but at least project down to the incomplete
 eigensubspace spanned by 
\begin_inset Formula $\hat{V}_{m}$
\end_inset

.
 We split the vector 
\begin_inset Formula $\v x$
\end_inset

 into contributions from the incomplete eigenspace of dimension 
\begin_inset Formula $m$
\end_inset

 and the remaining eigenspace,
\begin_inset Formula 
\begin{equation}
\v x=\sum_{k=1}^{M}x_{k}^{\prime}\v v_{k}=\sum_{k=1}^{m}x_{k}^{\prime}\v v_{k}+\sum_{k=m+1}^{M}x_{k}^{\prime}\v v_{k}=\hat{V}_{m}\v x_{m}^{\prime}+\hat{V}_{n}\v x_{n}^{\prime}.\label{eq:eigbasis}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Here we assumed the dimension of the eigenspace to be 
\begin_inset Formula $N$
\end_inset

 and span the whole space, so the operator 
\begin_inset Formula $\hat{K}$
\end_inset

 must be of full rank.
 The eigenvalue equation in full space is 
\begin_inset Formula 
\begin{equation}
\hat{K}\v v_{k}=\lambda_{k}\v v_{k}
\end{equation}

\end_inset

or
\begin_inset Formula 
\begin{equation}
\hat{K}\hat{V}=\v{\lambda}\hat{V}=\hat{V}\hat{\Lambda}.
\end{equation}

\end_inset

The reduced eigenvalue equation in 
\begin_inset Formula $m$
\end_inset

 dimensions of the subspace is
\begin_inset Formula 
\begin{equation}
\hat{K}\hat{V}_{m}=\v{\lambda}_{m}\hat{V}_{m}=\hat{V}_{m}\hat{\Lambda}_{m}.
\end{equation}

\end_inset

Here the 
\begin_inset Formula $(m\times m)$
\end_inset

 matrix 
\begin_inset Formula $\hat{\Lambda}_{m}$
\end_inset

 must be on the right-hand side, since 
\begin_inset Formula $\hat{V}_{m}$
\end_inset

 is of size 
\begin_inset Formula $(N\times m)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Dimensions of various quantities.
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Quantity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\v x$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N\times1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\v x_{m}^{\prime}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m\times1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\hat{V}_{m}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N\times m$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\hat{V}_{m}^{\star}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m\times N$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\hat{G}_{mm}=\hat{V}_{m}^{\star}\hat{V}_{m}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m\times m$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\v{\lambda}_{m}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1\times m$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Lambda_{m}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m\times N$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now let's look at the original equation
\begin_inset Formula 
\begin{equation}
(\hat{I}-\hat{K})\v x=\v x_{0}.\label{eq:eq}
\end{equation}

\end_inset

We want to find preconditioner of the that should modify 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:eq"

\end_inset

 to a new equation where the largest 
\begin_inset Formula $m$
\end_inset

 eigenvalues don't contribute to iterations.
 Usually this is written by multiplying 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:eq"

\end_inset

 with the inverse of a full-rank linear operator 
\begin_inset Formula $\hat{\Pi}^{-1}$
\end_inset

 and
\begin_inset Formula 
\begin{equation}
\hat{\Pi}^{-1}(\hat{I}-\hat{K})\v x=\Pi^{-1}\v x_{0}.\label{eq:precond}
\end{equation}

\end_inset

We choose 
\begin_inset Formula $\hat{\Pi}^{-1}=\hat{I}-\hat{M}$
\end_inset

 with some general 
\begin_inset Formula $\hat{M}$
\end_inset

.
 Then Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:precond"

\end_inset

 becomes
\begin_inset Formula 
\begin{equation}
(\hat{I}-\hat{M}-(\hat{I}-\hat{M})\hat{K})\v x=(\hat{I}-\hat{M})\v x_{0}
\end{equation}

\end_inset

or
\begin_inset Formula 
\begin{equation}
(\hat{I}+\hat{\bar{K}})\v x=(\hat{I}-\hat{M})\v x_{0}
\end{equation}

\end_inset

with
\begin_inset Formula 
\begin{align}
\hat{\bar{K}} & =\hat{M}+(\hat{I}-\hat{M})\hat{K}.
\end{align}

\end_inset

Our task to avoid the first 
\begin_inset Formula $m$
\end_inset

 largest eigenvalues of 
\begin_inset Formula $\hat{K}$
\end_inset

 with index 
\begin_inset Formula $k\leq m$
\end_inset

.
 This means that 
\begin_inset Formula $\hat{\bar{K}}\v v_{k}\overset{!}{=}0$
\end_inset

, so
\begin_inset Formula 
\begin{align}
0\overset{!}{=}\hat{\bar{K}}\v v_{k} & =\hat{M}\v v_{k}+(\hat{I}-\hat{M})\lambda_{k}\v v_{k}\nonumber \\
 & =\lambda_{k}\v v_{k}+\hat{M}(1-\lambda_{k})\v v_{k}.
\end{align}

\end_inset

Combining all 
\begin_inset Formula $\v v_{k}$
\end_inset

 inside 
\begin_inset Formula $\hat{V}_{m}$
\end_inset

 equivalently yields
\begin_inset Formula 
\[
\hat{\bar{K}}\hat{V}_{m}=\hat{V}_{m}\hat{\Lambda}_{m}+\hat{M}\hat{V}_{m}(\hat{I}_{m}-\hat{\Lambda}_{m})\overset{!}{=}0
\]

\end_inset

so
\begin_inset Formula 
\begin{equation}
\hat{M}\hat{V}_{m}(\hat{\Lambda}_{m}-\hat{I}_{m})\overset{!}{=}\hat{V}_{m}\hat{\Lambda}_{m}.
\end{equation}

\end_inset

Right-multiplying with the inverse of 
\begin_inset Formula $(\hat{\Lambda}_{m}-\hat{I}_{m})$
\end_inset

 yields
\begin_inset Formula 
\begin{equation}
\hat{M}\hat{V}_{m}\overset{!}{=}\hat{V}_{m}\hat{\Lambda}_{m}(\hat{\Lambda}_{m}-\hat{I}_{m})^{-1}.
\end{equation}

\end_inset

Now we can apply the unity term 
\begin_inset Formula $(\hat{V}_{m}^{\star}\hat{V}_{m})^{-1}\hat{V}_{m}^{\star}\hat{V}$
\end_inset

 to the right-hand side from the right, which gives
\begin_inset Formula 
\begin{equation}
\hat{M}\hat{V}_{m}\overset{!}{=}\hat{V}_{m}\hat{\Lambda}_{m}(\hat{\Lambda}_{m}-\hat{I}_{m})^{-1}(\hat{V}_{m}^{\star}\hat{V}_{m})^{-1}\hat{V}_{m}^{\star}\hat{V}.
\end{equation}

\end_inset

This trick is similar to expanding the identity operator into bras and kets
 in quantum mechanics.
 Now this equation is for sure solved by setting
\begin_inset Formula 
\begin{equation}
\hat{M}\equiv\hat{V}_{m}\hat{\Lambda}_{m}(\hat{\Lambda}_{m}-\hat{I}_{m})^{-1}(\hat{V}_{m}^{\star}\hat{V}_{m})^{-1}\hat{V}_{m}^{\star}.
\end{equation}

\end_inset

The inner part can be grouped to the inverse of an 
\begin_inset Formula $m$
\end_inset

-dimensional matrix
\begin_inset Formula 
\begin{equation}
\hat{L}_{mm}\equiv\hat{V}_{m}^{\star}\hat{V}_{m}(\hat{\Lambda}_{m}-\hat{I}_{m})
\end{equation}

\end_inset

that can be used to pre-compute 
\begin_inset Formula $\hat{L}_{mm}^{-1}$
\end_inset

 before iterations by solving the 
\begin_inset Formula $m$
\end_inset

-dimensional linear system for 
\begin_inset Formula $m$
\end_inset

 right-hand sides given by the canonical unit vectors 
\begin_inset Formula $\hat{I}_{m}=(\v e_{1},\v e_{2},\dots\v e_{m})$
\end_inset

 in 
\begin_inset Formula $m$
\end_inset

 dimensions,
\begin_inset Formula 
\begin{equation}
\hat{L}_{mm}\hat{Y}=\hat{I}_{m}.
\end{equation}

\end_inset

and setting 
\begin_inset Formula $\hat{L}_{mm}^{-1}$
\end_inset

 to its solution 
\begin_inset Formula $\hat{Y}$
\end_inset

.
 Of course this is only efficient if the number 
\begin_inset Formula $m$
\end_inset

 of large eigenvalues is much smaller than the total 
\begin_inset Formula $N$
\end_inset

.
 Finally we write 
\begin_inset Formula $\hat{M}$
\end_inset

 defining the preconditioner 
\begin_inset Formula $\hat{\Pi}^{-1}\equiv\hat{I}-\hat{M}$
\end_inset

 as
\begin_inset Formula 
\begin{equation}
\hat{M}\equiv\hat{V}_{m}\hat{\Lambda}_{m}\hat{L}_{mm}^{-1}\hat{V}_{m}^{\star}
\end{equation}

\end_inset

and solve
\begin_inset Formula 
\[
(\hat{I}-\hat{\bar{K}})\v x=\bar{\v x}_{0}
\]

\end_inset

having the same solution as the original equation, but with stable and fast
 iterations in
\begin_inset Formula 
\begin{equation}
\hat{\bar{K}}=\hat{M}+(\hat{I}-\hat{M})\hat{K}
\end{equation}

\end_inset

with driving term
\begin_inset Formula 
\begin{equation}
\bar{\v x}_{0}=(\hat{I}-\hat{M})\v x_{0}.
\end{equation}

\end_inset

Note that this is different to the scalar case Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:zw"

\end_inset

 where no concept of eigenvalues exists.
\end_layout

\begin_layout Subsection
Application to self-consistent magnetic fields
\end_layout

\begin_layout Standard
Within kinetic or MHD equilibria we compute magnetic response due to plasma
 currents,
\begin_inset Formula 
\begin{equation}
\delta\v B_{p}=\hat{K}(\delta\v B_{p}+\delta\v B_{v}),\label{eq:k}
\end{equation}

\end_inset

where 
\begin_inset Formula $\hat{K}=\hat{M}\hat{P}$
\end_inset

 first computes plasma currents 
\begin_inset Formula 
\begin{equation}
\v J_{p}=\hat{P}(\delta\v B_{p}+\delta\v B_{v})\label{eq:equi}
\end{equation}

\end_inset

 from the total field and then Maxwell's equations (Ampere's law) 
\begin_inset Formula 
\begin{equation}
\delta\v B_{p}=\hat{M}\delta\v J_{p}\label{eq:ampi}
\end{equation}

\end_inset

only for the plasma currents that change in each iteration, but not for
 the coil currents producing 
\begin_inset Formula $\delta\v B_{v}$
\end_inset

 that remain fixed.
 The latter have been already processed before via Biot-Savart, yielding
 
\begin_inset Formula 
\begin{equation}
\delta\v B_{v}=\hat{M}\delta\v J_{v}\label{eq:ampi2}
\end{equation}

\end_inset

independently.
 The combined Maxwell's equations 
\begin_inset Formula 
\begin{equation}
\delta\v B_{p}+\delta\v B_{v}=\hat{M}(\delta\v J_{p}+\delta\v J_{v})
\end{equation}

\end_inset

are thus fulfilled by superposition of 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ampi"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ampi2"

\end_inset


\end_layout

\begin_layout Standard
For direct iterations solving Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:k"

\end_inset

 we use the fixed-point equation
\begin_inset Formula 
\begin{equation}
\delta\v B_{p}=\hat{K}(\delta\v B_{v}+\delta\v B_{p})=\hat{K}(\delta\v B_{v}+\hat{K}(\delta\v B_{v}+\delta\v B_{p}))=\dots,\label{eq:k-1}
\end{equation}

\end_inset

iterations
\begin_inset Formula 
\begin{align}
\delta\v B_{p}^{[0]} & =\delta\v B_{v},\\
\delta\v B_{p}^{[1]} & =\hat{K}\delta\v B_{p}^{(0)}=\hat{K}\delta\v B_{v}\\
\delta\v B_{p}^{[n+1]} & =\hat{K}(\delta\v B_{v}+\delta\v B_{p}^{[n]}).
\end{align}

\end_inset

This application of 
\begin_inset Formula $\hat{K}=\hat{M}\hat{P}$
\end_inset

 to the combination of vacuum field plus previous iteration plus yields
 
\emph on
total 
\emph default
results, where 
\begin_inset Formula $\delta\v B_{p}^{[n+1]}$
\end_inset

 is an already an approximation of the total 
\begin_inset Formula $\delta\v B_{p}^{[n+1]}$
\end_inset

.
 This is what the call to 
\emph on
next_iteration
\emph default
 in 
\emph on
kin2d.f90 
\emph default
does with 
\emph on
bnorm_plas_prev
\emph default
 = 
\begin_inset Formula $\delta\v B_{p}^{[n]}$
\end_inset

 being computed from plasma currents 
\begin_inset Formula 
\begin{equation}
\delta\v J_{p}^{[n+1]}=\hat{P}(\delta\v B_{p}^{[n]}+\delta\v B_{v})
\end{equation}

\end_inset

and then fields
\begin_inset Formula 
\begin{equation}
\delta\v B_{v}^{[n+1]}=\hat{M}\delta\v J_{p}^{[n+1]}.\label{eq:ampi2-1}
\end{equation}

\end_inset

This corresponds to the operator series for 
\begin_inset Formula $(\hat{I}-\hat{K})$
\end_inset

 because
\begin_inset Formula 
\begin{align}
\delta\v B_{p}^{(n)} & =\hat{K}(\delta\v B_{v}+\delta\v B_{p}^{(n-1)})\nonumber \\
 & =\hat{K}(\delta\v B_{v}+\hat{K}(\delta\v B_{v}+\delta\v B_{p}^{(n-2)}))\nonumber \\
 & =\hat{K}\delta\v B_{v}+\hat{K}^{2}\delta\v B_{v}+\hat{K}^{3}\delta\v B_{v}+\dots+\hat{K}^{n+1}\delta\v B_{v}\nonumber \\
 & =(\hat{I}+\hat{K}+\hat{K}^{2}+\dots+\hat{K}^{n})\hat{K}\delta\v B_{v}.
\end{align}

\end_inset

Here we also call 
\begin_inset Formula 
\begin{equation}
\v x_{0}=\hat{K}\delta\v B_{v}=\delta\v B_{p}^{[1]}\equiv\delta\v B_{pv}.
\end{equation}

\end_inset

the single-iteration plasma response 
\begin_inset Formula $\delta\v B_{pv}$
\end_inset

 to the vacuum field 
\begin_inset Formula $\delta\v B_{v}$
\end_inset

.
 The whole preocedure can also be written in the 
\emph on
cumulative
\emph default
 way of the operator series described above by defining differences denoted
 by parantheses 
\begin_inset Formula $(n)$
\end_inset

 as
\begin_inset Formula 
\begin{equation}
\delta\v B_{p}^{(n+1)}\equiv\delta\v B_{p}^{[n+1]}-\delta\v B_{p}^{[n]}
\end{equation}

\end_inset

with
\begin_inset Formula 
\begin{align}
\delta\v B_{p}^{(1)} & =\delta\v B_{p}^{[1]}=\delta\v B_{pv},\\
\delta\v B_{p}^{(n+1)} & =\hat{K}\delta\v B_{p}^{(n)}
\end{align}

\end_inset

and
\begin_inset Formula 
\begin{equation}
\delta\v B_{p}^{[n]}=\sum_{k=1}^{n}\delta\v B_{p}^{(k)}.
\end{equation}

\end_inset

The correspondence to our operator series in 
\begin_inset Formula $\hat{K}$
\end_inset

 of these quantities is for
\begin_inset Formula 
\begin{align}
\v x & \equiv\delta\v B_{p},\\
\v x_{0} & =\delta\v B_{pv}.
\end{align}

\end_inset

where Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:k"

\end_inset

 becomes of the form 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:eq"

\end_inset

 with
\begin_inset Formula 
\begin{equation}
(\hat{I}-\hat{K})\delta\v B_{p}=\delta\v B_{pv}.\label{eq:k-2}
\end{equation}

\end_inset

A preconditioned iteration scheme defines an equivalent equation
\begin_inset Formula 
\begin{equation}
(\hat{I}-\hat{\bar{K}})\delta\v B_{p}=\delta\bar{\v B}_{pv}
\end{equation}

\end_inset

with a new iteration rule
\begin_inset Formula 
\begin{align}
\delta\v B_{p}^{(1)} & =\delta\bar{\v B}_{pv},\\
\delta\v B_{p}^{(n+1)} & =\hat{\bar{K}}\delta\v B_{p}^{(n)}.
\end{align}

\end_inset

Here we repeat the definition based on the largest 
\begin_inset Formula $m$
\end_inset

 eigenvalues described in the general section above,
\begin_inset Formula 
\begin{align}
\delta\bar{\v B}_{pv} & =(\hat{I}-\hat{M})\delta\v B_{pv}\\
\hat{\bar{K}} & =(\hat{M}+(\hat{I}-\hat{M})\hat{K}),\\
\hat{M} & =\hat{V}_{m}\hat{\Lambda}_{m}\hat{L}_{mm}^{-1}\hat{V}_{m}^{\star},\\
\hat{L}_{mm} & =\hat{V}_{m}^{\star}\hat{V}_{m}(\hat{\Lambda}_{m}-\hat{I}_{m}).
\end{align}

\end_inset

Then for preconditioned version of total (summed) field iterations 
\begin_inset Formula $[n]$
\end_inset

 it follows that
\begin_inset Formula 
\begin{align}
\delta\v B^{[1]} & =\delta\bar{\v B}_{pv}\nonumber \\
\delta\v B_{p}^{[n+1]} & =\delta\bar{\v B}_{pv}+\hat{\bar{K}}\delta\v B_{p}^{[n]}\nonumber \\
 & =(\hat{I}-\hat{M})\hat{K}\delta\v B_{v}+(\hat{M}+(\hat{I}-\hat{M})\hat{K})\delta\v B_{p}^{[n]}\nonumber \\
 & =\hat{K}(\delta\v B_{v}+\delta\v B_{p}^{[n]})-\hat{M}\hat{K}(\delta\v B_{v}+\delta\v B_{p}^{[n]}).
\end{align}

\end_inset

This is the way the algorithm is currently implemented in 
\emph on
kin2d.f90 
\emph default
and tested in 
\emph on
test_arnoldi.f90
\emph default
.
\end_layout

\begin_layout Section
TODOs for the one who continues kinetic equilibria:
\end_layout

\begin_layout Subsection
Perturbed problem for noisy matrices
\end_layout

\begin_layout Standard
Check how sensitive the method is to random noise in the operator 
\begin_inset Formula $\hat{K}$
\end_inset

 and possibly find some general rules of applicability.
\end_layout

\begin_layout Subsection
Underdetermined systems
\end_layout

\begin_layout Standard
Extend the method to singular operators 
\begin_inset Formula $\hat{K}$
\end_inset

 with rank 
\begin_inset Formula $M<N$
\end_inset

.
 There the eigendecomposition is replaced by a singular value decomposition
 that can also rely on Krylov methods.
\end_layout

\begin_layout Subsection
Extension to nonlinear operators
\end_layout

\begin_layout Standard
Extend the method to nonlinear operators.
\end_layout

\end_body
\end_document
